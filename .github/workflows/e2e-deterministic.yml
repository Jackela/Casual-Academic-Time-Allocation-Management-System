name: E2E Deterministic Suite

on:
  push:
    branches: [ feat/e2e-hardening-deterministic-suite, main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: e2e-deterministic-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-deterministic:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      # Determinism + reporting
      PWTEST_WORKERS: 1
      PWTEST_RETRIES: 1
      PLAYWRIGHT_HTML_REPORT: ./playwright-report
      # Frontend server origin used by runner script
      E2E_FRONTEND_URL: http://127.0.0.1:5174
      # Backend origin used by runner script (docker-compose exposes 8084)
      E2E_BACKEND_MODE: docker
      E2E_BACKEND_URL: http://127.0.0.1:8084
      E2E_BACKEND_PORT: 8084
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect act and use host backend
        run: |
          if [ -n "${ACT:-}" ]; then
            echo "Detected act; will reuse host backend via host.docker.internal:8084";
            echo "E2E_SKIP_BACKEND=1" >> "$GITHUB_ENV";
            echo "E2E_BACKEND_URL=http://host.docker.internal:8084" >> "$GITHUB_ENV";
            echo "E2E_BACKEND_PORT=8084" >> "$GITHUB_ENV";
          fi
      - name: Repo guard (no ad-hoc generators)
        run: node scripts/guard-allowed-generators.js

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Docker-backed backend avoids Java/Gradle on runner
      - name: Verify Docker availability
        run: docker version

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Guardrail - no waitForTimeout in real specs
        working-directory: frontend
        run: npm run lint:e2e:timeouts

      - name: Run P0 acceptance (required)
        id: p0
        run: node scripts/e2e-runner.js --project=real --grep @p0

      - name: Upload P0 Report
        if: ${{ failure() && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-p0-report
          path: frontend/playwright-report
          if-no-files-found: ignore

      - name: Run Contract lane (required)
        id: contract
        run: node scripts/e2e-runner.js --project=real --grep contract

      - name: Upload Contract Report
        if: ${{ failure() && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-contract-report
          path: frontend/playwright-report
          if-no-files-found: ignore

      - name: Run Full Real (non-blocking)
        id: full
        continue-on-error: true
        run: node scripts/e2e-runner.js --project=real

      - name: Upload Full Real Report
        if: ${{ failure() && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: e2e-full-report
          path: frontend/playwright-report
          if-no-files-found: ignore

      - name: Dump Docker Logs (on failure)
        if: ${{ failure() }}
        run: |
          docker compose ps
          docker compose logs --no-color --timestamps api || true
          docker compose logs --no-color --timestamps db || true

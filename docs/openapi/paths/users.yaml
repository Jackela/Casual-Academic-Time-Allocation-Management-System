USERS:
  get:
    tags:
      - Users
    summary: List users
    description: |
      Retrieve all users in the system.

      **Required role**: ADMIN
    operationId: listUsers
    security:
      - bearerAuth: []
    responses:
      '200':
        description: List of users
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/users.yaml#/UserResponse'
      '401':
        description: Authentication required
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '403':
        description: Insufficient permissions
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'

  post:
    tags:
      - Users
    summary: Create new user
    description: |
      Create a new user account in the system.

      **Required role**: ADMIN

      **Business rules**:
      - Email must be unique in the system
      - Password must meet security requirements (8+ chars, mixed case, numbers, special chars)
      - Only ADMIN users can create new accounts
      - Default user status is active
    operationId: createUser
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/UserCreateRequest'
          examples:
            create_lecturer:
              summary: Create lecturer account
              value:
                email: "new.lecturer@university.edu.au"
                name: "Dr. Jane Doe"
                password: "SecurePass123!"
                role: "LECTURER"
            create_tutor:
              summary: Create tutor account
              value:
                email: "new.tutor@university.edu.au"
                name: "Alice Johnson"
                password: "MyPassword456!"
                role: "TUTOR"
    responses:
      '201':
        description: User created successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
            examples:
              created_user:
                summary: Successfully created user
                value:
                  id: 123
                  email: "new.lecturer@university.edu.au"
                  name: "Dr. Jane Doe"
                  role: "LECTURER"
                  isActive: true
      '400':
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
            examples:
              email_exists:
                summary: Email already exists
                value:
                  timestamp: "2025-08-01T10:15:30.123Z"
                  status: 400
                  error: "EMAIL_EXISTS"
                  message: "Email already exists"
                  path: "/api/users"
      '401':
        description: Authentication required
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '403':
        description: Insufficient permissions
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'

  patch:
    tags:
      - Users
    summary: Update user
    description: |
      Partially update a user's account details (activation status or names).

      **Required role**: ADMIN

      **Business rules**:
      - Only ADMIN users can modify other accounts
      - The last active administrator cannot be deactivated
    operationId: updateUser
    security:
      - bearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        description: User identifier to update
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/UserUpdateRequest'
          examples:
            deactivate_user:
              summary: Deactivate a tutor account
              value:
                isActive: false
            update_names:
              summary: Update lecturer display name
              value:
                firstName: "Alex"
                lastName: "Nguyen"
    responses:
      '200':
        description: User updated successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '400':
        description: Validation failure
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '401':
        description: Authentication required
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '403':
        description: Insufficient permissions
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '404':
        description: User not found
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '../schemas/errors.yaml#/ErrorResponse'

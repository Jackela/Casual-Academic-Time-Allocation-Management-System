name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Repo guard (no ad-hoc generators)
        run: node scripts/guard-allowed-generators.js
      - name: Backend unit+integration+coverage (canonical)
        env:
          JWT_SECRET: test-secret
        run: |
          chmod +x gradlew || true
          ./gradlew check

  playwright-mock:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Run Playwright mock suite (canonical)
        env:
          CI: '1'
          E2E_SKIP_BACKEND: '1'
          E2E_SKIP_REAL_LOGIN: '1'
        run: node scripts/e2e-runner.js --project=mock
      - name: Upload mock Playwright report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-mock-report
          path: frontend/playwright-report

  detect-act:
    runs-on: ubuntu-latest
    outputs:
      is_act: ${{ steps.detect.outputs.is_act }}
    steps:
      - id: detect
        run: |
          if [ -z "${ACT:-}" ]; then
            echo "is_act=" >> "$GITHUB_OUTPUT"
          else
            echo "is_act=true" >> "$GITHUB_OUTPUT"
          fi

  playwright-real:
    if: ${{ needs.detect-act.outputs.is_act != 'true' }}
    needs: [test-backend, playwright-mock, detect-act]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Run Playwright real suite (canonical)
        env:
          CI: '1'
          E2E_ADMIN_EMAIL: admin@example.com
          E2E_ADMIN_PASSWORD: Admin123!
          E2E_LECTURER_EMAIL: lecturer@example.com
          E2E_LECTURER_PASSWORD: Lecturer123!
          E2E_TUTOR_EMAIL: tutor@example.com
          E2E_TUTOR_PASSWORD: Tutor123!
        run: node scripts/e2e-runner.js --project=real
      - name: Upload real Playwright report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-real-report
          path: frontend/playwright-report
      # Backend lifecycle handled by canonical runner


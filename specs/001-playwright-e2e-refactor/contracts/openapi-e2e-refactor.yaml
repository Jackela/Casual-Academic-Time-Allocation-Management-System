openapi: 3.0.3
info:
  title: CATAMS E2E Refactor Contract
  version: 0.1.0
paths:
  /api/auth/login:
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string, minLength: 8 }
              required: [ email, password ]
      responses:
        '200': { description: OK }
        '401': { description: Authentication failed }
  /api/timesheets/quote:
    post:
      summary: Quote timesheet (SSOT)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courseId: { type: string }
                taskType: { type: string }
                qualification: { type: string }
                repeatFlag: { type: boolean }
                deliveryHours: { type: number }
                notes: { type: string }
              required: [ courseId, taskType, qualification, deliveryHours ]
      responses:
        '200':
          description: Quote computed
          content:
            application/json:
              schema:
                type: object
                properties:
                  associatedHours: { type: number }
                  payableHours: { type: number }
                  hourlyRate: { type: number }
                  total: { type: number }
                  rateCode: { type: string }
                  rateVersion: { type: string }
                  formula: { type: string }
                  clauseReference: { type: string }
  /api/timesheets:
    post:
      summary: Create timesheet (server recompute)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimesheetInstructionalInput'
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/timesheets/{id}/confirm:
    patch:
      summary: Tutor confirm
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Confirmed }
        '409': { description: Invalid state }
  /api/timesheets/{id}/approve/lecturer:
    patch:
      summary: Lecturer approve
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Approved }
        '409': { description: Invalid state }
  /api/timesheets/{id}/approve/admin:
    patch:
      summary: Admin approve (requires Lecturer Approved)
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Approved }
        '409': { description: Invalid state or missing Lecturer approval }
  /api/timesheets/{id}/request-modification:
    patch:
      summary: Request modification
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason: { type: string }
              required: [ reason ]
      responses:
        '200': { description: Marked for modification }
  /api/timesheets/{id}/reject:
    patch:
      summary: Reject timesheet
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason: { type: string }
              required: [ reason ]
      responses:
        '200': { description: Rejected }
  /api/admin/users:
    post:
      summary: Admin create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string, minLength: 8 }
                role: { type: string, enum: [Tutor, Lecturer, Admin] }
              required: [ email, password, role ]
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
  /api/admin/users/{id}/activate:
    patch:
      summary: Activate user
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Activated }
  /api/admin/users/{id}/deactivate:
    patch:
      summary: Deactivate user
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Deactivated }
components:
  schemas:
    TimesheetInstructionalInput:
      type: object
      properties:
        courseId: { type: string }
        taskType: { type: string }
        qualification: { type: string }
        repeatFlag: { type: boolean }
        deliveryHours: { type: number }
        notes: { type: string }
      required: [ courseId, taskType, qualification, deliveryHours ]

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: catams
      POSTGRES_USER: catams_user
      POSTGRES_PASSWORD: catams_password
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Run with e2e-local profile to enable H2 + seed/reset endpoints in container
      SPRING_PROFILES_ACTIVE: e2e-local
      JWT_SECRET: ${JWT_SECRET:-MDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWY=}
      APP_CORS_ALLOWED_ORIGINS: ${APP_CORS_ALLOWED_ORIGINS:-http://localhost:5174}
    ports:
      - "${API_PORT:-8084}:8084"

  web:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      VITE_API_BASE_URL: http://api:8084
      VITE_API_PROXY_TARGET: http://api:8084
      VITE_E2E: 'true'
    depends_on:
      - api
    ports:
      - "5174:5174"

  e2e:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    environment:
      E2E_BACKEND_URL: http://api:8084
      E2E_FRONTEND_URL: http://web:5174
      TEST_DATA_RESET_TOKEN: ${TEST_DATA_RESET_TOKEN:-local-e2e-reset}
    depends_on:
      - api
      - web

volumes:
  db_data:


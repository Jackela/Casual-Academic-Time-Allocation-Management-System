name: E2E Real Suite

on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'specs/001-playwright-e2e-refactor/**'
      - '.github/workflows/e2e-real.yml'
  # Only run on push when explicitly enabled via BASE_URL secret
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/e2e-real.yml'

concurrency:
  group: e2e-real-${{ github.ref }}
  cancel-in-progress: true

env:
  # Mirror secret into env so act schema accepts `env.` access in job if conditions
  BASE_URL: ${{ secrets.BASE_URL }}

jobs:
  lint-and-typecheck:
    # Skip when running locally via nektos/act (uses default actor 'nektos/act')
    if: ${{ github.actor != 'nektos/act' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - if: ${{ always() }}
        uses: actions/checkout@v4
      - if: ${{ always() }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - if: ${{ always() }}
        run: npm ci
      - name: Repo guard (no ad-hoc generators)
        if: ${{ always() }}
        run: node scripts/guard-allowed-generators.js
      - if: ${{ always() }}
        run: npm run lint
      - if: ${{ always() }}
        run: npx tsc -b --pretty false

  e2e-p0:
    needs: lint-and-typecheck
    runs-on: ubuntu-latest
    env:
      # Provide these as repository/environment secrets when enabling real runs
      BASE_URL: ${{ secrets.BASE_URL }}
      E2E_FRONTEND_URL: ${{ secrets.BASE_URL }}
      E2E_LECTURER_EMAIL: ${{ secrets.E2E_LECTURER_EMAIL }}
      E2E_LECTURER_PASSWORD: ${{ secrets.E2E_LECTURER_PASSWORD }}
      E2E_TUTOR_EMAIL: ${{ secrets.E2E_TUTOR_EMAIL }}
      E2E_TUTOR_PASSWORD: ${{ secrets.E2E_TUTOR_PASSWORD }}
      E2E_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL }}
      E2E_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - name: Repo guard (no ad-hoc generators)
        run: node ../scripts/guard-allowed-generators.js
      - name: Install Playwright (Chromium)
        if: ${{ env.BASE_URL != '' }}
        run: npx playwright install --with-deps chromium
      - name: Run P0 E2E (grep @p0, canonical)
        if: ${{ env.BASE_URL != '' }}
        run: node ../scripts/e2e-runner.js --project=real --grep @p0
      - name: Upload Playwright Report
        if: ${{ always() && env.BASE_URL != '' && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: ignore
      - name: Diagnostics (on failure)
        if: ${{ failure() }}
        run: |
          echo 'Listing frontend/playwright-report:'
          ls -la frontend/playwright-report || true
          echo 'Listing frontend/test-results:'
          ls -la frontend/test-results || true
      - name: Dump Logs (on failure)
        if: ${{ failure() }}
        run: |
          echo 'Gradle build scan hint:'
          echo 'Consider enabling --scan locally to get details.'

  e2e-smoke:
    needs: lint-and-typecheck
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      E2E_FRONTEND_URL: ${{ secrets.BASE_URL }}
      E2E_LECTURER_EMAIL: ${{ secrets.E2E_LECTURER_EMAIL }}
      E2E_LECTURER_PASSWORD: ${{ secrets.E2E_LECTURER_PASSWORD }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - name: Install Playwright (Chromium)
        if: ${{ env.BASE_URL != '' }}
        run: npx playwright install --with-deps chromium
      - name: Run Smoke E2E (canonical)
        if: ${{ env.BASE_URL != '' }}
        run: node ../scripts/e2e-runner.js --project=smoke
      - name: Upload Playwright Report (Smoke)
        if: ${{ always() && env.BASE_URL != '' && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-smoke
          path: frontend/playwright-report
          if-no-files-found: ignore
      - name: Diagnostics (on failure)
        if: ${{ failure() }}
        run: |
          echo 'Listing frontend/playwright-report:'
          ls -la frontend/playwright-report || true
          echo 'Listing frontend/test-results:'
          ls -la frontend/test-results || true
